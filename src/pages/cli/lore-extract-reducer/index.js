import React from 'react';
import Link from 'gatsby-link';
import Template from '../../../components/templates/LoreExtractReducer';
import Markdown from '../../../components/Markdown';
import CodeTabs from '../../../components/CodeTabs';
import CodeTab from '../../../components/CodeTab';
import QuickstartBranch from '../../../components/QuickstartBranch';

export default (props) => {
  return (
    <Template>
      <h1>
        extract reducer
      </h1>
      <p>
        CLI command to extract one or more of the <Link to="/reducers/">reducers</Link> generated by the framework
        into your project. This will allow you to see the code that gets executed, and change it if needed.
      </p>

      <h3>
        Usage
      </h3>
      <p>
        To use this command, you need to specify the name of the model you'd like to extract a reducer for, as well
        as the name of the reducer you'd like to extract.
      </p>

      <Markdown type="sh" text={`
      lore extract reducer [model]/[reducer]
      `}/>

      <p>
        For example, to extract the <code>find</code> reducer for the <code>post</code> model, you would run the
        command <code>lore extract reducer post/find</code>.
      </p>
      <p>
        If you do NOT specify a reducer, the command will extract ALL reducers for that model. For example, this
        command:
      </p>

      <Markdown type="sh" text={`
      lore extract action reducer
      `}/>

      <p>
        Will extract all reducers for the <code>post</code> model, and create the files below:
      </p>

      <Markdown type="sh" text={`
      -src
       |-reducers
         |-post
           |-byCid.js
           |-byId.js
           |-find.js
           |-index.js
      `}/>

      <p>
        The <code>index.js</code> file is the actual reducer, that consumes the other files as child reducers.
        The <code>index.js</code> file looks like this:
      </p>

      <Markdown text={`
      import { ActionTypes } from 'lore-utils';
      import byId from './byId';
      import byCid from './byCid';
      import find from './find';

      const initialState = {
        byId: undefined,
        byCid: undefined,
        find: undefined
      };

      export default function(state, action) {
        let nextState = state || initialState;

        // If we receive an action to reset the store (such as when logging out)
        // reset the state to the initial state
        if (action.type === ActionTypes.RESET_STORE) {
          nextState = initialState;
        }

        const _byId = byId(nextState.byId, action);
        const _byCid = byCid(nextState.byCid, action);
        const _find = find(nextState.find, action, {
          nextState: {
            byCid: _byCid,
            byId: _byId
          }
        });

        return {
          byId: _byId,
          byCid: _byCid,
          find: _find
        };
      }
      `}/>
    </Template>
  )
};
